/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.58).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package za.co.ashtech.parkgr.controller;

import java.util.UUID;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.servlet.http.HttpServletRequest;
import za.co.ashtech.parkgr.controller.models.RandomResource;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-08-06T14:52:13.057490747Z[GMT]")
@Validated
public interface ParkrunApi {


    @Operation(summary = "Return random park run", description = "By calling this API a randomly selected park run will be returned to the client ", tags={ "developers" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "randomly selected park run", content = @Content(mediaType = "application/json", schema = @Schema(implementation = RandomResource.class))),
        
        @ApiResponse(responseCode = "400", description = "bad input parameter", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))),
        
        @ApiResponse(responseCode = "500", description = "error procissing request", content = @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))) })
    @RequestMapping(value = "/parkrun/random",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RandomResource> getRandomParkrun(HttpServletRequest request,@Parameter(in = ParameterIn.HEADER, description = "Transaction ID" ,required=true,schema=@Schema()) @RequestHeader(value="txId", required=true) UUID txId
			,
			@Parameter(in = ParameterIn.HEADER, description = "Name of sender", required = true, schema = @Schema()) @RequestHeader(value = "senderId", required = true) String senderId,
			@Parameter(in = ParameterIn.HEADER, description = "External reference for consuming client", schema = @Schema()) @RequestHeader(value = "externalRef", required = false) String externalRef);

}